openapi: 3.0.2
info:
  description: |
    Customers focuses on solving authentic identification of humans who are legally able to hold and transfer currency within the US. Primarily this project solves [Know Your Customer](https://en.wikipedia.org/wiki/Know_your_customer) (KYC), [Customer Identification Program](https://en.wikipedia.org/wiki/Customer_Identification_Program) (CIP), [Office of Foreign Asset Control](https://www.treasury.gov/about/organizational-structure/offices/Pages/Office-of-Foreign-Assets-Control.aspx) (OFAC) checks and verification workflows to comply with United States federal law and ensure authentic transfers. Customers has an objective to be a service for detailed due diligence on individuals and companies for Financial Institutions and services in a modernized and extensible way.

    Customer phone numbers and addresses are stored and partially used in KYC/OFAC validation. Arbitrary key/value pairs can be stored for a Customer. Documents and Disclaimers, and their acknowledgment are also stored under a Customer as they're accepted. Bank Accounts, which can be validated with micro-deposits currently, are stored under each Customer.

    ![](https://raw.githubusercontent.com/adamdecaf/customers/create-accounts/docs/images/customer.png)
  version: v1
  title: Customers API
  contact:
    url: https://github.com/moov-io/customers
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://44.208.17.145:8087
    description: Mutapa Server

tags:
  - name: Configuration
    description: |
      Endpoints for retrieving and updating configuration for an organization.
  - name: Customers
    description: |
      Endpoints for searching, creating, and verifying individuals according to United States regulations for money movement.
  - name: Accounts
    description: |
      Endpoints for searching, creating, and validating financial instruments according to United States regulations for money movement.
  - name: Account Validation
    description: |
      Endpoints for validating Accounts after they're created.
  - name: Disclaimers
    description: |
      Endpoints for accepting legal agreements for moving money in the United States.
  - name: Documents
    description: |
      Endpoints for uploading and accepting legal documents to comply with United States regulations.
  - name: Reports
    description: |
      Endpoints for generating bulk listings of Accounts and Customers.

paths:
  /ping:
    get:
      tags: [Customers]
      summary: Ping Customers Service
      description: Check the Customers service to check if running
      operationId: ping
      responses:
        '200':
          description: Service is running properly

  /configuration/customers:
    get:
      tags: [Configuration]
      summary: Get Organization Configuration
      description: Retrieve current configuration for the provided organization.
      operationId: getOrganizationConfiguration
      parameters:
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
      responses:
        '200':
          description: Configuration was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationConfiguration'
    put:
      tags: [Configuration]
      summary: Update Organization Configuration
      description: Update the configuration for the provided organization.
      operationId: updateOrganizationConfiguration
      parameters:
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationConfiguration'
      responses:
        '200':
          description: Configuration was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationConfiguration'
        '400':
          description: Configuration was not updated, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /configuration/logo:
    get:
      tags: [Configuration]
      summary: Get Organization Logo
      description: Retrieve the organization's logo
      operationId: getOrganizationLogo
      parameters:
        - name: X-Organization
          required: true
          in: header
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
      responses:
        "200":
          description: Logo image file in original upload format
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpg:
              schema:
                type: string
                format: binary
            image/svg+xml:
              schema:
                type: string
                format: binary
            image/gif:
              schema:
                type: string
                format: binary
        '400':
          description: Failed to retrieve image file, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    put:
      tags: [Configuration]
      summary: Update Organization Logo
      description: Upload an organization's logo, or update it if it already exists
      operationId: uploadOrganizationLogo
      parameters:
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: Logo image file to be uploaded
                  type: string
                  format: binary
              required:
                - file
            encoding:
              file:
                contentType: image/jpeg, image/svg+xml, image/gif, image/png
      responses:
        '204':
          description: Logo image file was successfully uploaded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationConfiguration'
        '400':
          description: Configuration was not updated, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers:
    get:
      tags: [Customers]
      summary: Search Customers
      description: Search for customers using different filter parameters
      operationId: searchCustomers
      parameters:
        - name: query
          in: query
          description: Optional parameter for searching by customer name
          example: jane
          schema:
            type: string
          required: false
        - name: email
          in: query
          description: Optional parameter for searching by customer email
          example: jane@doe.com
          schema:
            type: string
        - name: status
          in: query
          description: Optional parameter for searching by customer status
          example: Verified
          schema:
            type: string
        - name: type
          in: query
          description: Optional parameter for searching by customer type
          example: individual
          schema:
            type: string
        - name: skip
          in: query
          description: Optional parameter for searching for customers by skipping over an initial group
          example: 10
          schema:
            type: string
        - name: count
          in: query
          description: Optional parameter for searching by specifying the amount to return
          example: 20
          schema:
            type: string
        - name: customerIDs
          in: query
          description: Optional parameter for searching by customers' IDs
          example: e210a9d6-d755-4455-9bd2-9577ea7e1081,970ef15d-a4e1-473f-b5d7-da38163b0ba3
          schema:
            type: string
      responses:
        '200':
          description: Customers were successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customers'
        '400':
          description: Customers were not retrieved, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    post:
      tags: [Customers]
      summary: Create Customer
      description: Create a Customer object from the given details of a human or business
      operationId: createCustomer
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '200':
          description: Customer was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer was not created, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}:
    get:
      tags: [Customers]
      summary: Get Customer
      description: Retrieve the Customer object and metadata for the customerID.
      operationId: getCustomer
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID that identifies this Customer
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      responses:
        '200':
          description: A customer objects for the supplied customerID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Problem getting customer, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
        '404':
          description: No Customer with the specified customerID was found
    delete:
      tags: [Customers]
      summary: Delete Customer
      description: Remove a given Customer
      operationId: deleteCustomer
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - description: customerID of the Customer to be deleted
          in: path
          name: customerID
          required: true
          schema:
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
            type: string
          style: simple
      responses:
        "200":
          description: Customer removed from customers
        '400':
          description: Failed to delete customer, see error(s)
    put:
      tags: [Customers]
      summary: Update Customer
      description: Update a Customer object
      operationId: updateCustomer
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID that identifies this Customer
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomer'
      responses:
        '200':
          description: Customer was successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer was not updated, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/address:
    post:
      tags: [Customers]
      summary: Add Customer Address
      description: Add an Address onto an existing Customer record
      operationId: addAddress
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to add the address onto
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddress'
      responses:
        '200':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer address was not updated, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/addresses/{addressID}:
    put:
      tags: [Customers]
      summary: Update Customer Address
      description: Updates the specified customer address
      operationId: updateAddress
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: addressID
          in: path
          description: Address ID
          required: true
          schema:
            type: string
            example: 1d62e297-9727-4084-a902-1031da932c9e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddress'
      responses:
        '200':
          description: Updated Customer address
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    delete:
      tags: [Customers]
      summary: Delete Customer Address
      description: Deletes a customer's address
      operationId: deleteAddress
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: addressID
          in: path
          description: Address ID
          required: true
          schema:
            type: string
            example: 1d62e297-9727-4084-a902-1031da932c9e
      responses:
        '204':
          description: Successfully deleted the customer's address
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'

  /customers/{customerID}/metadata:
    put:
      tags: [Customers]
      summary: Update Customer Metadata
      description: Replace the metadata object for a customer. Metadata is a map of unique keys associated to values to act as foreign key relationships or arbitrary data associated to a Customer.
      operationId: replaceCustomerMetadata
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to add the metadata onto
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerMetadata'
      responses:
        '200':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer metadata was not updated, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/status:
    put:
      tags: [Customers]
      summary: Update Customer Status
      description: Update the status for a customer, which can only be updated by authenticated users with permissions.
      operationId: updateCustomerStatus
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to update the CustomerStatus
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerStatus'
      responses:
        '200':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer status was not updated, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts:
    get:
      tags: [Accounts]
      summary: Get Customer Accounts
      description: Retrieve all accounts for the given customer.
      operationId: getCustomerAccounts
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to get Accounts for
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      responses:
        '200':
          description: Active accounts for the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
        '400':
          description: Failed to get accounts, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    post:
      tags: [Accounts]
      summary: Create Customer Account
      description: Create an account for the given customer
      operationId: createCustomerAccount
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to add an Account onto
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
      responses:
        '200':
          description: Account created for the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Failed to get accounts, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}:
    get:
      tags: [Accounts]
      summary: Get Customer Account
      description: Retrieve an account by ID for the given customer.
      operationId: getCustomerAccountByID
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - description: customerID of the Customer to get an Account for
          in: path
          name: customerID
          required: true
          schema:
            example: e210a9d6
            type: string
          style: simple
        - description: accountID of the Account
          in: path
          name: accountID
          required: true
          schema:
            example: b74d7c51
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: An active account for the customer
        "400":
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
          description: Failed to get accounts, see error(s)
    delete:
      tags: [Accounts]
      summary: Delete Customer Account
      description: Remove an account from the given Customer
      operationId: deleteCustomerAccount
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to remove an Account
          required: true
          schema:
            type: string
            example: e210a9d6
        - description: accountID of the Account
          in: path
          name: accountID
          required: true
          schema:
            example: b74d7c51
            type: string
          style: simple
      responses:
        '200':
          description: Account removed form customer
        '400':
          description: Failed to get accounts, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}/decrypt:
    post:
      tags: [Accounts]
      summary: Decrypt Account Number
      description: |
        Return the account number encrypted with a shared secret for application requests. This encryption key is different from the key used for persistence.
        The returned value is a Base64 encoded NaCL SecretBox. You can decode and then decrypt the value to get UTF-8 bytes of the account number.
        Example: https://gist.github.com/theFong/b7a3da1a718ecaa8e44b29467e6d8962
      operationId: decryptAccountNumber
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer the accountID belongs to
          required: true
          schema:
            type: string
            example: 51dd8cdd
        - name: accountID
          in: path
          description: accountID of the Account to get decrypted account number
          required: true
          schema:
            type: string
            example: b74d7c51
      responses:
        '200':
          description: Decrypted account number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransitAccountNumber'
        '400':
          description: Failed to decrypt account number, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}/ofac:
    get:
      tags: [Accounts]
      summary: Latest Account OFAC Search
      description: Get the latest OFAC search for an Account
      operationId: getLatestAccountOFACSearch
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer
          required: true
          schema:
            type: string
            example: e210a9d6
        - name: accountID
          in: path
          description: accountID of the Account to get latest OFAC search
          required: true
          schema:
            type: string
            example: e210a9d6
      responses:
        '200':
          description: OFAC search did not block account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OFACSearch'
        '400':
          description: An error occurred when refreshing OFAC data, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}/refresh/ofac:
    put:
      tags: [Accounts]
      summary: Refresh Account OFAC Search
      description: Refresh OFAC search for a given Account
      operationId: refreshAccountOFACSearch
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to refresh OFAC search
          required: true
          schema:
            type: string
            example: e210a9d6
        - name: accountID
          in: path
          description: accountID of the Account to get latest OFAC search
          required: true
          schema:
            type: string
            example: e210a9d6
      responses:
        '200':
          description: OFAC search did not block Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OFACSearch'
        '400':
          description: An error occurred when refreshing OFAC data, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}/status:
    put:
      tags: [Accounts]
      summary: Update Account Status
      description: Update the status for the specified accountID
      operationId: updateAccountStatus
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: accountID
          in: path
          description: accountID of the Account to validate
          required: true
          schema:
            type: string
            example: b74d7c51
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountStatus'
      responses:
        '200':
          description: Account status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}/validations:
    post:
      tags: ["Account Validation"]
      summary: Initiate Account Validation
      description: |
        Initiate account validation with specified strategy and vendor.
      operationId: initAccountValidation
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer the accountID belongs to
          required: true
          schema:
            type: string
            example: 51dd8cdd
        - name: accountID
          in: path
          description: accountID of the Account to validate
          required: true
          schema:
            type: string
            example: b74d7c51
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitAccountValidationRequest'
            example:
              strategy: micro-deposits
              vendor: moov
      responses:
        '200':
          description: Account validation initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitAccountValidationResponse'
              examples:
                Micro-deposits:
                  value:
                    validationID: b74d7c51
                    strategy: micro-deposits
                    vendor: moov
                    status: init
                    createdAt: "2020-08-25T13:07:19Z"
                    updatedAt: "2020-08-25T13:09:22Z"
                    vendor_response:
                      result: "initiated"
                Plaid:
                  value:
                    validationID: b74d7c51
                    strategy: instant
                    vendor: plaid
                    status: init
                    createdAt: "2020-08-25T13:07:19Z"
                    updatedAt: "2020-08-25T13:09:22Z"
                    vendor_response:
                      link_token: "link-sandbox-32771002-45e1-4f9b-93fd-000000000000"
                      expiration: "2020-08-25T13:07:19Z"
                MX:
                  value:
                    validationID: b74d7c51
                    strategy: instant
                    vendor: mx
                    status: init
                    createdAt: "2020-08-25T13:07:19Z"
                    updatedAt: "2020-08-25T13:09:22Z"
                    vendor_response:
                      connect_widget_url: "https://int-widgets.moneydesktop.com/xxxxxx"
        '400':
          description: Failed to initiate account validation, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    put:
      tags: ["Account Validation"]
      summary: Complete Account Validation
      description: |
        Complete account validation with specified strategy and vendor.
      operationId: completeAccountValidation
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer the accountID belongs to
          required: true
          schema:
            type: string
            example: 51dd8cdd
        - name: accountID
          in: path
          description: accountID of the Account to validate
          required: true
          schema:
            type: string
            example: b74d7c51
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteAccountValidationRequest'
            examples:
              Micro-deposits:
                value:
                  strategy: micro-deposits
                  vendor: moov
                  vendor_request:
                    micro-deposits:
                      - "USD 0.03"
                      - "USD 0.07"
              Plaid:
                value:
                  strategy: instant
                  vendor: plaid
                  vendor_request:
                    public_token: "public-sandbox-59eb4718-93d8-41a0-a338-000000000000"
              MX:
                value:
                  strategy: instant
                  vendor: mx
                  vendor_request:
                    user_guid: "USR-d6a55e69-8711-4b21-b594-2538551231231"
                    member_guid: "MBR-1c38dad9-e699-4f01-baf7-d91231231231"
      responses:
        '200':
          description: Account validation initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteAccountValidationResponse'
              example:
                validationID: b74d7c51
                strategy: micro-deposits
                vendor: moov
                status: completed
                createdAt: "2020-08-25T13:07:19Z"
                updatedAt: "2020-08-25T13:09:22Z"
                vendor_response:
                  result: "validated"
        '400':
          description: Failed to complete account validation, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/accounts/{accountID}/validations/{validationID}:
    get:
      tags: ["Account Validation"]
      summary: Get Account Validation
      description: |
        Get information about account validation strategy, status, etc.
      operationId: getAccountValidation
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer the accountID belongs to
          required: true
          schema:
            type: string
            example: 51dd8cdd
        - name: accountID
          in: path
          description: accountID of the Account to validate
          required: true
          schema:
            type: string
            example: b74d7c51
        - name: validationID
          in: path
          description: ID of the Validation
          required: true
          schema:
            type: string
            example: b74d7c51
      responses:
        '200':
          description: Account validation information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountValidationResponse'
              example:
                validationID: b74d7c51
                strategy: instant
                vendor: plaid
                status: completed
                createdAt: "2020-08-25T13:07:19Z"
                updatedAt: "2020-08-25T13:09:22Z"
        '400':
          description: Failed to initiate account validation, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/disclaimers:
    get:
      tags: [Disclaimers]
      summary: Get Customer Disclaimers
      description: Get active disclaimers for the given customer
      operationId: getCustomerDisclaimers
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to get disclaimers
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      responses:
        '200':
          description: Active disclaimers for the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disclaimers'
        '400':
          description: Failed to get disclaimers, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/disclaimers/{disclaimerID}:
    post:
      tags: [Disclaimers]
      summary: Accept Customer Disclaimer
      description: Accept a disclaimer for the given customer which could include a document also
      operationId: acceptDisclaimer
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to accept a disclaimer
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: disclaimerID
          in: path
          description: disclaimerID of the Disclaimer to accept
          required: true
          schema:
            type: string
            example: 9577ea7e1081
      responses:
        '200':
          description: Disclaimer accepted for customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disclaimer'
        '400':
          description: Customer disclaimer was not accepted, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/documents:
    post:
      tags: [Documents]
      summary: Upload Customer Document
      description: Upload a document for the given customer
      operationId: uploadCustomerDocument
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to add a document
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: type
          in: query
          description: Document type (see Document type for values)
          required: true
          schema:
            type: string
            example: DriversLicense
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: Document to be uploaded
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Document was not uploaded, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    get:
      tags: [Documents]
      summary: Get Customer Documents
      description: Get documents for a customer
      operationId: getCustomerDocuments
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to get all Documents
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      responses:
        '200':
          description: Document uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
        '400':
          description: Failed to get customer documents, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/documents/{documentID}:
    get:
      tags: [Documents]
      summary: Get Customer Document
      description: Retrieve the referenced document
      operationId: getCustomerDocumentContents
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to get a Document
          required: true
          schema:
            type: string
            example: e210a9d6
        - name: documentID
          in: path
          description: documentID to identify a Document
          required: true
          schema:
            type: string
            example: 9577ea7e1081
      responses:
        '200':
          description: Document contents (ready for a browser to download)
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            image/*:
              schema:
                type: string
                format: binary
        '400':
          description: Failed to get customer document, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    delete:
      tags: [Documents]
      summary: Delete Customer Document
      description: Remove Customer Document
      operationId: deleteCustomerDocument
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: customerID
          in: path
          description: ID of the customer that owns the document
          required: true
          schema:
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
            type: string
          style: simple
        - name: documentID
          in: path
          description: ID of the document
          required: true
          schema:
            example: 9577ea7e1081
            type: string
          style: simple
      responses:
        "204":
          description: Customer's document successfully deleted
        '400':
          description: Failed to delete customer's document, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/ofac:
    get:
      tags: [Customers]
      summary: Latest Customer OFAC search
      description: Get the latest OFAC search for a Customer
      operationId: getLatestOFACSearch
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to get latest OFAC search
          required: true
          schema:
            type: string
            example: e210a9d6
      responses:
        '200':
          description: OFAC search did not block customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OFACSearch'
        '400':
          description: An error occurred when refreshing OFAC data, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/refresh/ofac:
    put:
      tags: [Customers]
      summary: Refresh Customer OFAC search
      description: Refresh OFAC search for a given Customer
      operationId: refreshOFACSearch
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to refresh OFAC search
          required: true
          schema:
            type: string
            example: e210a9d6
      responses:
        '200':
          description: OFAC search did not block customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OFACSearch'
        '400':
          description: An error occurred when refreshing OFAC data, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/representatives:
    post:
      tags: [Representatives]
      summary: Add Customer Representative
      description: Add a Customer Representative
      operationId: addRepresentative
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          required: true
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: org342
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer for whom to add the representative
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepresentative'
      responses:
        '200':
          description: A customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Customer representative was not added, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/representatives/{representativeID}:
    put:
      tags: [Representatives]
      summary: Update Customer Representative
      description: Updates the specified Customer Representative
      operationId: updateRepresentative
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: representativeID
          in: path
          description: Representative ID
          required: true
          schema:
            type: string
            example: 1d62e297-9727-4084-a902-1031da932c9e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRepresentative'
      responses:
        '200':
          description: Updated Customer Representative
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    delete:
      tags: [Representatives]
      summary: Delete Customer Representative
      description: Deletes a Customer Representative
      operationId: deleteRepresentative
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: representativeID
          in: path
          description: Representative ID
          required: true
          schema:
            type: string
            example: 1d62e297-9727-4084-a902-1031da932c9e
      responses:
        '204':
          description: Successfully deleted the customer representative
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/representatives/{representativeID}/address:
    post:
      tags: [Representatives]
      summary: Add Customer Representative Address
      description: Add an address to an existing customer representative record
      operationId: addRepresentativeAddress
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: org342
          schema:
            type: string
        - name: customerID
          in: path
          description: customerID of the Customer to add the address onto
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: representativeID
          in: path
          description: representativeID of the Customer representative for whom to add the address
          required: true
          schema:
            type: string
            example: b210a9d6-d755-4455-9bd2-9577ea7e7643
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddress'
      responses:
        '200':
          description: A customer representative object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
        '400':
          description: Customer representative address was not added, see error(s)
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
  /customers/{customerID}/representatives/{representativeID}/addresses/{addressID}:
    put:
      tags: [Representatives]
      summary: Update Customer Representative Address
      description: Updates the specified customer representative address
      operationId: updateRepresentativeAddress
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: representativeID
          in: path
          description: Customer Representative ID
          required: true
          schema:
            type: string
            example: b946a9d6-d755-4455-9bd2-9577ea7f0623
        - name: addressID
          in: path
          description: Address ID
          required: true
          schema:
            type: string
            example: 1d62e297-9727-4084-a902-1031da932c9e
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddress'
      responses:
        '200':
          description: Updated Customer representative address
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
    delete:
      tags: [Representatives]
      summary: Delete a Customer Representative Address
      description: Deletes a customer representative's address
      operationId: deleteRepresentativeAddress
      parameters:
        - name: customerID
          in: path
          description: Customer ID
          required: true
          schema:
            type: string
            example: e210a9d6-d755-4455-9bd2-9577ea7e1081
        - name: representativeID
          in: path
          description: Customer Representative ID
          required: true
          schema:
            type: string
            example: b946a9d6-d755-4455-9bd2-9577ea7f0623
        - name: addressID
          in: path
          description: Address ID
          required: true
          schema:
            type: string
            example: 1d62e297-9727-4084-a902-1031da932c9e
      responses:
        '204':
          description: Successfully deleted the customer representative's address
        '400':
          description: See error message
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'

  /reports/accounts:
    get:
      tags: [Reports]
      summary: Create Report of Accounts
      description: Retrieves a list of customer and account information.
      operationId: getReportOfCustomerAccounts
      parameters:
        - name: X-Request-ID
          in: header
          description: Optional requestID allows application developer to trace requests through the systems logs
          example: rs4f9915
          schema:
            type: string
        - name: X-Organization
          in: header
          required: true
          description: Value used to separate and identify models
          example: de2c99f3
          schema:
            type: string
        - name: accountIDs
          in: query
          description: A list of customer account IDs with a limit of 25 IDs.
          example: f6eddffd,f6eddffe,f6eddfff
          schema:
            type: string
          required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportAccountsResponse'
          description: A list of customers' accounts
        "400":
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/moov-io/base/master/api/common.yaml#/components/schemas/Error'
          description: Failed to get accounts, see error(s)
components:
  schemas:
    OrganizationConfiguration:
      properties:
        legalEntity:
          type: string
          example: 5c20933f
          description: customerID of legal entity for this Organization
        primaryAccount:
          type: string
          example: f6eddffd
          description: accountID of funding/source account for this Organization
      required:
        - legalEntity
        - primaryAccount
    CreateCustomer:
      type: object
      properties:
        firstName:
          type: string
          maximum: 64
          description: Given Name or First Name
          example: Robert
        middleName:
          type: string
          maximum: 64
          description: Middle Name
          example: Flex
        lastName:
          type: string
          description: Surname or Last Name
          example: Smith
        nickName:
          type: string
          description: Name Customer is preferred to be called
          example: Bob
        suffix:
          type: string
          description: Customers name suffix. "Jr", "PH.D."
        type:
          $ref: '#/components/schemas/CustomerType'
        businessName:
          type: string
          description: Business Name for business type customers
          example: Alphabet Inc.
        doingBusinessAs:
          type: string
          description: Doing Business As (DBA) name for business type customers
          example: Google
        businessType:
          $ref: '#/components/schemas/BusinessType'
        EIN:
          type: string
          description: Employer Identification Number (EIN) for business type customers
          example: 77-0493581
        DUNS:
          type: string
          description: Dun & Bradstreet D-U-N-S Number (D-U-N-S) for business type customers
          example: 15-048-3782
        SICCode:
          $ref: '#/components/schemas/SICCode'
        NAICSCode:
          $ref: '#/components/schemas/NAICSCode'
        birthDate:
          type: string
          description: Legal date of birth
          example: '2016-08-29'
        email:
          type: string
          maximum: 500
          description: Primary email address of customer name@domain.com
        SSN:
          type: string
          description: Customer Social Security Number (SSN)
          example: 111-11-1111
        website:
          type: string
          description: Company Website for business type customers
          example: http://google.com
        dateBusinessEstablished:
          type: string
          description: Date business was established for business type customers
          example: '2016-08-29'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/CreatePhone'
        addresses:
          type: array
          minimum: 1
          items:
            $ref: '#/components/schemas/CreateAddress'
        representatives:
          type: array
          items:
            $ref: '#/components/schemas/CreateRepresentative'
        metadata:
          type: object
          description: Map of unique keys associated to values to act as foreign key relationships or arbitrary data associated to a Customer.
          additionalProperties:
            type: string
          example:
            paygateID: "23beb5fd"
      required:
        - firstName
        - lastName
        - type
        - email
    Customer:
      type: object
      properties:
        customerID:
          type: string
          description: The unique identifier for the customer who owns the account
          example: e210a9d6
        firstName:
          type: string
          maximum: 64
          description: Given Name or First Name
          example: Robert
        middleName:
          type: string
          maximum: 64
          description: Middle Name
          example: Flex
        lastName:
          type: string
          description: Surname or Last Name
          example: Smith
        nickName:
          type: string
          description: Name Customer is preferred to be called
          example: Bob
        suffix:
          type: string
          description: Customers name suffix. "Jr", "PH.D."
        type:
          $ref: '#/components/schemas/CustomerType'
        businessName:
          type: string
          description: Business Name for business type customers
          example: Alphabet Inc.
        doingBusinessAs:
          type: string
          description: Doing Business As (DBA) name for business type customers
          example: Google
        businessType:
          $ref: '#/components/schemas/BusinessType'
        EIN:
          type: string
          description: Employer Identification Number (EIN) for business type customers
          example: 77-0493581
        DUNS:
          type: string
          description: Dun & Bradstreet D-U-N-S Number (D-U-N-S) for business type customers
          example: 15-048-3782
        SICCode:
          $ref: '#/components/schemas/SICCode'
        NAICSCode:
          $ref: '#/components/schemas/NAICSCode'
        birthDate:
          type: string
          description: Legal date of birth
          example: '2016-08-29'
        status:
          $ref: '#/components/schemas/CustomerStatus'
        email:
          type: string
          maximum: 500
          description: Primary email address of customer name@domain.com
        website:
          type: string
          description: Company Website for business type customers
          example: http://google.com
        dateBusinessEstablished:
          type: string
          description: Date business was established for business type customers
          example: '2016-08-29'
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        representatives:
          type: array
          items:
            $ref: '#/components/schemas/Representative'
        metadata:
          type: object
          description: Map of unique keys associated to values to act as foreign key relationships or arbitrary data associated to a Customer.
          additionalProperties:
            type: string
          example:
            paygateID: "23beb5fd"
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        lastModified:
          type: string
          format: date-time
          description: Last time the object was modified
          example: '2016-08-29T09:12:33.001Z'
      required:
        - customerID
        - firstName
        - lastName
        - type
        - status
        - email
        - createdAt
        - lastModified
    Customers:
      type: array
      items:
        $ref: '#/components/schemas/Customer'
    CustomerType:
      type: string
      description: Note if this Customer represents an individual or business
      enum:
        - individual
        - business
    BusinessType:
      type: string
      description: The type of business for business customers
      enum:
        - individual, sole proprietor, or single-member LLC
        - corporation
        - non-profit organization
        - partnership
        - limited liability company
    OwnerType:
      type: string
      description: The type of individual owner of a resource, such as SSN, phone, or address
      enum:
        - customer
        - representative
    CustomerStatus:
      type: string
      description: State of the customer
      enum:
        - Deceased
        - Rejected
        - Unknown
        - ReceiveOnly
        - Verified
        - Frozen
    SICCode:
      type: string
      description: SIC Code (https://docs.google.com/spreadsheets/d/1erIdqoy60JwLAnpb91EfoJV5YrXDnbwSaA-aqcBlw48/edit#gid=1627409140)
      enum:
        - 01
        - 02
        - 07
        - 08
        - 09
        - 10
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 20
        - 21
        - 22
        - 23
        - 24
        - 25
        - 26
        - 27
        - 28
        - 29
        - 30
        - 31
        - 32
        - 33
        - 34
        - 35
        - 36
        - 37
        - 38
        - 39
        - 40
        - 41
        - 42
        - 43
        - 44
        - 45
        - 46
        - 47
        - 48
        - 49
        - 50
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 57
        - 58
        - 59
        - 60
        - 61
        - 62
        - 63
        - 64
        - 65
        - 67
        - 70
        - 72
        - 73
        - 75
        - 76
        - 78
        - 79
        - 80
        - 81
        - 82
        - 83
        - 84
        - 86
        - 87
        - 88
        - 89
        - 91
        - 92
        - 93
        - 94
        - 95
        - 96
        - 97
        - 98
        - 99
      x-enum-values:
        - Agricultural Production – Crops
        - Agricultural Production – Livestock
        - Agricultural Services
        - Forestry
        - Fishing, Hunting, & Trapping
        - Metal, Mining
        - Coal Mining
        - Oil & Gas Extraction
        - Nonmetallic Minerals, Except Fuels
        - General Building Contractors
        - Heavy Construction, Except Building
        - Special Trade Contractors
        - Food & Kindred Products
        - Tobacco Products
        - Textile Mill Products
        - Apparel & Other Textile Products
        - Lumber & Wood Products
        - Furniture & Fixtures
        - Paper & Allied Products
        - Printing & Publishing
        - Chemical & Allied Products
        - Petroleum & Coal Products
        - Rubber & Miscellaneous Plastics Products
        - Leather & Leather Products
        - Stone, Clay, & Glass Products
        - Primary Metal Industries
        - Fabricated Metal Products
        - Industrial Machinery & Equipment
        - Electronic & Other Electric Equipment
        - Transportation Equipment
        - Instruments & Related Products
        - Miscellaneous Manufacturing Industries
        - Railroad Transportation
        - Local & Interurban Passenger Transit
        - Trucking & Warehousing
        - U.S. Postal Service
        - Water Transportation
        - Transportation by Air
        - Pipelines, Except Natural Gas
        - Transportation Services
        - Communications
        - Electric, Gas, & Sanitary Services
        - Wholesale Trade – Durable Goods
        - Wholesale Trade – Nondurable Goods
        - Building Materials & Gardening Supplies
        - General Merchandise Stores
        - Food Stores
        - Automative Dealers & Service Stations
        - Apparel & Accessory Stores
        - Furniture & Homefurnishings Stores
        - Eating & Drinking Places
        - Miscellaneous Retail
        - Depository Institutions
        - Nondepository Institutions
        - Security & Commodity Brokers
        - Insurance Carriers
        - Insurance Agents, Brokers, & Service
        - Real Estate
        - Holding & Other Investment Offices
        - Hotels & Other Lodging Places
        - Personal Services
        - Business Services
        - Auto Repair, Services, & Parking
        - Miscellaneous Repair Services
        - Motion Pictures
        - Amusement & Recreation Services
        - Health Services
        - Legal Services
        - Educational Services
        - Social Services
        - Museums, Botanical, Zoological Gardens
        - Membership Organizations
        - Engineering & Management Services
        - Private Households
        - Services, Not Elsewhere Classified
        - Executive, Legislative, & General
        - Justice, Public Order, & Safety
        - Finance, Taxation, & Monetary Policy
        - Administration of Human Resources
        - Environmental Quality & Housing
        - Administration of Economic Programs
        - National Security & International Affairs
        - Zoological Gardens
        - Non-Classifiable Establishments
    NAICSCode:
      type: string
      description: NAICS Code (https://docs.google.com/spreadsheets/d/1erIdqoy60JwLAnpb91EfoJV5YrXDnbwSaA-aqcBlw48/edit#gid=1627409140)
      enum:
        - 11
        - 21
        - 22
        - 23
        - 31
        - 32
        - 33
        - 42
        - 44
        - 45
        - 48
        - 49
        - 51
        - 52
        - 53
        - 54
        - 55
        - 56
        - 61
        - 62
        - 71
        - 72
        - 81
        - 92
        - 99
      x-enum-values:
        - Agriculture, forestry, fishing and hunting
        - Mining
        - Utilities
        - Construction
        - Manufacturing
        - Manufacturing
        - Manufacturing
        - Wholesale trade
        - Retail trade
        - Retail trade
        - Transportation and warehousing
        - Transportation and warehousing
        - Information
        - Finance and insurance
        - Real estate and rental and leasing
        - Professional, scientific, and technical services
        - Management of companies and enterprises
        - Administrative and support and waste management and remediation services
        - Education services
        - Health care and social assistance
        - Arts, entertainment, and recreation
        - Accommodation and food services
        - Other services, except public administration
        - Public administration
        - Unclassified
    CustomerMetadata:
      properties:
        metadata:
          type: object
          description: Map of unique keys associated to values to act as foreign key relationships or arbitrary data associated to a Customer.
          additionalProperties:
            type: string
          example:
            paygateID: "23beb5fd"
      required:
        - metadata
    UpdateCustomerStatus:
      properties:
        comment:
          type: string
          description: Free form comment about the customer status update
          example: Customer was approved from KYC confirmation
        status:
          $ref: '#/components/schemas/CustomerStatus'
      required:
        - status
    UpdateAddress:
      properties:
        type:
          type: string
          description: Attribute of address
          enum:
            - primary
            - secondary
        validated:
          type: boolean
          default: false
          description: If this address has been confirmed with the Customer
        address1:
          type: string
          description: First line of the address
        address2:
          type: string
          description: Second line of the address
        city:
          type: string
        state:
          type: string
          minimum: 2
          maximum: 2
          description: two character code of a US state
        postalCode:
          type: string
        country:
          type: string
          enum:
            - US
      required:
        - type
        - address1
        - city
        - state
        - postalCode
        - country
    CreatePhone:
      properties:
        number:
          type: string
          description: phone number
          example: "+1.818.555.1212"
        type:
          $ref: '#/components/schemas/PhoneType'
      required:
        - number
        - type
    Phone:
      properties:
        number:
          type: string
          description: phone number
          example: "+1.818.555.1212"
        ownerType:
          $ref: '#/components/schemas/OwnerType'
        valid:
          type: boolean
          description: phone number has been validated to connect with customer
        type:
          $ref: '#/components/schemas/PhoneType'
      required:
        - number
        - valid
        - type
    PhoneType:
      type: string
      description: phone type
      enum:
        - home
        - mobile
        - work
    CreateAddress:
      type: object
      properties:
        type:
          type: string
          enum:
            - Primary
            - Secondary
        address1:
          type: string
          description: First line of the address
        address2:
          type: string
          description: Second line of the address
        city:
          type: string
          example: Denver
        state:
          type: string
          minimum: 2
          maximum: 2
          description: two character code of a US state
          example: CO
        postalCode:
          type: string
        country:
          type: string
          enum:
            - US
      required:
        - type
        - address1
        - city
        - state
        - postalCode
        - country
    Address:
      type: object
      properties:
        addressID:
          type: string
          description: Unique identifier for this Address
          example: 851233a1
        type:
          $ref: '#/components/schemas/AddressType'
        ownerType:
          $ref: '#/components/schemas/OwnerType'
        address1:
          type: string
          description: First line of the address
        address2:
          type: string
          description: Second line of the address
        city:
          type: string
        state:
          type: string
          minimum: 2
          maximum: 2
          description: two character code of a US state
        postalCode:
          type: string
        country:
          type: string
          enum:
            - US
        validated:
          type: boolean
          description: Address has been validated for customer
      required:
        - addressID
        - type
        - address1
        - city
        - state
        - postalCode
        - country
    AddressType:
      type: string
      description: address type
      enum:
        - primary
        - secondary
    CreateRepresentative:
      properties:
        firstName:
          type: string
          description: Given Name or First Name
          example: Mary
        lastName:
          type: string
          description: Surname or Last Name
          example: Smith
        jobTitle:
          type: string
          description: Job title of this representative
          example: Chief Executive Officer
        birthDate:
          type: string
          description: Legal date of birth
          example: '2016-08-29'
        SSN:
          type: string
          description: Customer Representative's Social Security Number (SSN)
          example: 111-11-1111
        phones:
          type: array
          items:
            $ref: '#/components/schemas/CreatePhone'
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/CreateAddress'
      required:
        - firstName
        - lastName
    Representative:
      properties:
        representativeID:
          type: string
          description: Unique identifier for this Representative
          example: b280b9d9
        customerID:
          type: string
          description: The unique identifier for the customer the representative belongs to
          example: e210a9d6
        firstName:
          type: string
          description: Given Name or First Name
          example: Mary
        lastName:
          type: string
          description: Surname or Last Name
          example: Smith
        jobTitle:
          type: string
          description: Job title of this representative
          example: Chief Executive Officer
        birthDate:
          type: string
          description: Legal date of birth
          example: '2016-08-29'
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        lastModified:
          type: string
          format: date-time
          description: Last time the object was modified
          example: '2016-08-29T09:12:33.001Z'
        SSN:
          type: string
          description: Customer Representative's Social Security Number (SSN)
          example: 111-11-1111
        phones:
          type: array
          items:
            $ref: '#/components/schemas/Phone'
        addresses:
          type: array
          minimum: 1
          items:
            $ref: '#/components/schemas/Address'
      required:
        - representativeID
        - customerID
        - firstName
        - lastName
        - createdAt
        - lastModified
    AccountStatus:
      type: string
      description: Enumeration if this account has been validated through micro-deposits or another available strategy.
      enum:
        - none
        - validated
      example: validated
    AccountType:
      type: string
      description: |
        Defines the account as *checking* or *savings*
      enum:
        - Checking
        - Savings
      example: checking
    TransitAccountNumber:
      properties:
        accountNumber:
          type: string
          description: |
            The base64 encoded encrypted account number for the bank account for transit across services. The symmetric key used is configured from TRANSIT_LOCAL_BASE64_KEY and callers of endpoints that respond with encrypted values need this same key to decrypt.
          example: MKtcJkzlxUlGcW7Nf5xm5cg==
    CreateAccount:
      properties:
        holderName:
          type: string
          description: Legal holder name on the account
          example: "My Company,llc or Wade Arnold"
        accountNumber:
          type: string
          description: The account number for the bank account
          example: "0001027028"
        routingNumber:
          type: string
          description: The ABA routing transit number for the bank account.
          example: "051504597"
        type:
          $ref: '#/components/schemas/AccountType'
      required:
        - holderName
        - accountNumber
        - routingNumber
        - type
    Accounts:
      type: array
      items:
        $ref: '#/components/schemas/Account'
    Account:
      properties:
        accountID:
          type: string
          description: A unique identifier for this account
          example: e1b1544a
        customerID:
          type: string
          description: The unique identifier for the customer who owns the account
          example: e1b1544a
        holderName:
          type: string
          description: Legal holder name on the account
          example: "My Company,llc or Wade Arnold"
        maskedAccountNumber:
          type: string
          description: The masked account number for the bank account
          example: "0001027028"
        routingNumber:
          type: string
          description: The ABA routing transit number for the bank account.
          example: "051504597"
        status:
          $ref: '#/components/schemas/AccountStatus'
        type:
          $ref: '#/components/schemas/AccountType'
        institution:
          $ref: '#/components/schemas/InstitutionDetails'
      required:
        - accountID
        - customerID
        - holderName
        - maskedAccountNumber
        - routingNumber
        - status
        - type
    InstitutionDetails:
      properties:
        name:
          type: string
          example: First Bank
        routingNumber:
          type: string
          example: "123456780"
        phoneNumber:
          type: string
          example: "5551112222"
        address:
          $ref: '#/components/schemas/InstitutionAddress'
      required:
        - name
        - routingNumber
    InstitutionAddress:
      properties:
        address1:
          type: string
          example: "430 NORTH ST"
        address2:
          type: string
          example: ""
        city:
          type: string
          example: "CALDWELL"
        state:
          type: string
          example: "OH"
        zip:
          type: string
          example: "43724"
      required:
        - address1
        - city
        - state
        - zip
    UpdateValidation:
      type: object
      properties:
        strategy:
          type: string
          enum:
            - "micro-deposits"
          example: micro-deposits
          description: |
            Validation strategy to use for the account.

            micro-deposits:
              Initiate two small credits to the account along with a later balancing debit. Only provide amounts to attempt validation.
        micro-deposits:
          type: array
          items:
            $ref: 'https://raw.githubusercontent.com/moov-io/paygate/master/api/client.yaml#/components/schemas/Amount'
      required:
        - strategy
    Disclaimer:
      type: object
      properties:
        disclaimerID:
          type: string
          description: The unique identifier for this Disclaimer
          example: 9342f3a7
        text:
          type: string
          description: Text that user must accept
          example: Set of conditions
        documentID:
          type: string
          description: Optional documentID which references a Document included in the disclaimer
          example: 08a184e1
        acceptedAt:
          type: string
          description: Timestamp if disclaimer has been accepted, a timestamp before the year 2000 indicates no acceptance.
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
      required:
        - disclaimerID
        - text
    Disclaimers:
      type: array
      items:
        $ref: '#/components/schemas/Disclaimer'
    Document:
      type: object
      properties:
        documentID:
          type: string
          description: A unique identifier for this document
          example: e210a9d6
        type:
          type: string
          enum:
            - DriversLicense
            - Passport
            - UtilityBill
            - BankStatement
        contentType:
          type: string
          example: application/pdf
        parseErrors:
          description: Optional array of errors encountered dring automated parsing.
          type: array
          items:
            type: string
        uploadedAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
      required:
        - documentID
        - type
        - contentType
        - uploadedAt
    Documents:
      type: array
      items:
        $ref: '#/components/schemas/Document'
    OFACSearch:
      type: object
      properties:
        entityID:
          type: string
          description: SDN EntityID of the Entity
          example: "2141"
        blocked:
          type: boolean
          description: If the search resulted in a positive match against a sanctions list and should be blocked from making transfers or other operations.
          example: false
        sdnName:
          type: string
          description: Name of the SDN entity
          example: John Smith
        sdnType:
          type: string
          description: SDN entity type
          example: Individual
        match:
          type: number
          example: 0.91
          description: Percentage of similarity between the Customer name and this OFAC entity
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
      required:
        - entityID
        - blocked
        - sdnName
        - sdnType
        - match
        - createdAt
    InitAccountValidationRequest:
      type: object
      properties:
        strategy:
          type: string
          enum:
            - "micro-deposits"
            - "instant"
          description: |
            Validation strategy to use for the account.

            micro-deposits: Initiate two small credits to the account along with a later balancing debit.

            instant: Initiate instant account validation with specified vendor (e.g. Plaid, MX).
        vendor:
          type: string
          enum:
            - "moov"
            - "plaid"
            - "mx"
          default: "moov"
      required:
        - strategy
    InitAccountValidationResponse:
      type: object
      properties:
        validationID:
          type: string
          description: A unique identifier for the validation
          example: e210a9d6
        strategy:
          type: string
          description: Validation strategy
          example: instant
        vendor:
          type: string
          description: Validation vendor
          example: plaid
        status:
          type: string
          description: Validation status
          example: init
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        updatedAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        vendor_response:
          type: object
          description: key/value map of vendor specific params
    CompleteAccountValidationRequest:
      type: object
      properties:
        vendor_request:
          type: object
          description: key/value map of vendor specific params
      required:
        - vendor_request
    CompleteAccountValidationResponse:
      type: object
      properties:
        validationID:
          type: string
          description: A unique identifier for the validation
          example: e210a9d6
        strategy:
          type: string
          description: Validation strategy
          example: instant
        vendor:
          type: string
          description: Validation vendor
          example: plaid
        status:
          type: string
          description: Validation status
          example: completed
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        updatedAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        vendor_response:
          type: object
          description: key/value map of vendor specific params
    AccountValidationResponse:
      type: object
      properties:
        validationID:
          type: string
          description: A unique identifier for the validation
          example: e210a9d6
        strategy:
          type: string
          description: Validation strategy
          example: instant
        vendor:
          type: string
          description: Validation vendor
          example: plaid
        status:
          type: string
          description: Validation status
          enum:
            - init
            - completed
          example: completed
        createdAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
        updatedAt:
          type: string
          format: date-time
          example: '2016-08-29T09:12:33.001Z'
    UpdateAccountStatus:
      properties:
        status:
          $ref: 'https://raw.githubusercontent.com/moov-io/customers/master/api/client.yaml#/components/schemas/AccountStatus'
      required:
        - status
    ReportAccountResponse:
      type: object
      properties:
        Customer:
          $ref: '#/components/schemas/Customer'
        Account:
          $ref: '#/components/schemas/Account'
    ReportAccountsResponse:
      type: array
      items:
        $ref: '#/components/schemas/ReportAccountResponse'
